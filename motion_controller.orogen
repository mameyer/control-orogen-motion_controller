name "motion_controller"
version "0.1"

using_library "motion_controller"

import_types_from "base"
import_types_from "motion_controller/MotionControllerTypes.hpp"
import_types_from "motion_controllerTypes.hpp"

task_context "Task" do
    needs_configuration

    property('geometry', '/motion_controller/Geometry').
        doc("Geometrical information")
        
    property('actuators', '/std/vector</motion_controller/Actuator')
    
    property('joint_commands', '/std/vector</motion_controller/JointCommand')
    
    property('ackermann_ratio', 'double')
    
    property('max_rotation_angle', 'double')
    
    property('use_joints_feedback', 'bool')
    
    property('turning_angle_threshold', 'double', 0.005)
    
    property('joints_feedback_turning_threshold', 'double', 0.1)
    
    property('rotation_max_epsilon', 'double', 0.05)

    input_port('motion_command', '/base/commands/Motion2D').
        doc("Drive command that should steer the robot to the target pose")
        
    input_port('actuators_status', '/base/samples/Joints').
        doc("Current state (current, position ...) of the actuators.")

    output_port('actuators_command', '/base/commands/Joints')
    
    output_port('drive_mode', '/motion_controller/DriveMode')
    
    output_port('wheel_debug', 'std/vector</base/Waypoint>')
    
    output_port('ackermann_turning_center', '/base/Waypoint')

    periodic 0.01
    
    runtime_states "EXEC_LATERAL", "EXEC_ACKERMANN", "EXEC_TURN_ON_SPOT", "IDLE", "TOO_FAST", "NEEDS_WAIT_FOR_TURN"
    error_states "MISSING_JOINTS_FEEDBACK"
end